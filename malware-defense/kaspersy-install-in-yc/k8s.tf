#Create k8s cluster ------------------------------------------------------------------------
resource "yandex_kubernetes_cluster" "k8s-cluster-mirtov" {
  name        = "k8s-cluster-mirtov"
  description = "my k8s cluster"

  network_id = yandex_vpc_network.vpc-kasper.id

  master {
    version = "1.20"
    zonal {
      zone      = "ru-central1-a"
      subnet_id = yandex_vpc_subnet.subnet-k8s.id
    }

    public_ip = true

  
    maintenance_policy {
      auto_upgrade = true

      maintenance_window {
        start_time = "15:00"
        duration   = "3h"
      }
    }
  }

  service_account_id      = "${yandex_iam_service_account.editor-sa.id}"
  node_service_account_id = "${yandex_iam_service_account.node-sa.id}"

  labels = {
    my_key       = "my_value"
    my_other_key = "my_other_value"
  }

  release_channel = "RAPID"
  network_policy_provider = "CALICO"


  depends_on = [
  yandex_resourcemanager_folder_iam_binding.editor-sa-binding,
]
}


#Create k8s nodes-----------------------------------------------------------------------------------
resource "yandex_kubernetes_node_group" "my_node_group" {
  cluster_id  = "${yandex_kubernetes_cluster.k8s-cluster-mirtov.id}"
  name        = "my-nodes"
  description = "description"
  version     = "1.20"

  labels = {
    "key" = "value"
  }

  instance_template {
    platform_id = "standard-v2"

    network_interface {
      nat                = true
      subnet_ids         = ["${yandex_vpc_subnet.subnet-k8s.id}"]
    }

    resources {
      memory = 2
      cores  = 2
    }

    boot_disk {
      type = "network-hdd"
      size = 64
    }

    scheduling_policy {
      preemptible = false
    }
  }

  scale_policy {
    fixed_scale {
      size = 3
    }
  }

  allocation_policy {
    location {
      zone = "ru-central1-a"
    }
  }

  maintenance_policy {
    auto_upgrade = true
    auto_repair  = true

    maintenance_window {
      day        = "monday"
      start_time = "15:00"
      duration   = "3h"
    }

    maintenance_window {
      day        = "friday"
      start_time = "10:00"
      duration   = "4h30m"
    }
  }
}



# Create service accounts for k8s------------------------------------------------------------------
resource "yandex_iam_service_account" "node-sa" {
  name        = "node-sa"
  description = "service account to registry from nodes"
}

resource "yandex_iam_service_account" "editor-sa" {
  name        = "editor-sa"
  description = "service account to manage"
}




#Bind iam policy to service accounts----------------------------------------------------------------

#Bind iam policy for editor
resource "yandex_resourcemanager_folder_iam_binding" "editor-sa-binding" {
  folder_id = var.folder_id

  role = "editor"

  members = [
    "serviceAccount:${yandex_iam_service_account.editor-sa.id}",
  ]
}
